// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sorcering
List sorcering(const Nullable<NumericMatrix&> A, const int t_sim, const String& tsteps, const Nullable<NumericVector&> C0, const Nullable<NumericVector&> N0, const Nullable<NumericMatrix&> Cin, const Nullable<NumericMatrix&> Nin, const Nullable<NumericMatrix&> xi, const bool calcN, const bool calcNbalance);
RcppExport SEXP _sorcering_sorcering(SEXP ASEXP, SEXP t_simSEXP, SEXP tstepsSEXP, SEXP C0SEXP, SEXP N0SEXP, SEXP CinSEXP, SEXP NinSEXP, SEXP xiSEXP, SEXP calcNSEXP, SEXP calcNbalanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Nullable<NumericMatrix&> >::type A(ASEXP);
    Rcpp::traits::input_parameter< const int >::type t_sim(t_simSEXP);
    Rcpp::traits::input_parameter< const String& >::type tsteps(tstepsSEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericVector&> >::type C0(C0SEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericVector&> >::type N0(N0SEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericMatrix&> >::type Cin(CinSEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericMatrix&> >::type Nin(NinSEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericMatrix&> >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const bool >::type calcN(calcNSEXP);
    Rcpp::traits::input_parameter< const bool >::type calcNbalance(calcNbalanceSEXP);
    rcpp_result_gen = Rcpp::wrap(sorcering(A, t_sim, tsteps, C0, N0, Cin, Nin, xi, calcN, calcNbalance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sorcering_sorcering", (DL_FUNC) &_sorcering_sorcering, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_sorcering(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
